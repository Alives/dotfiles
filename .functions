#!/bin/sh

function renum {
  count=1
  for window in $(tmux list-windows | cut -d: -f1); do
    tmux movew -s ${window} -t ${count} 2>/dev/null
    count=$((count + 1))
  done
}

function first {
  awk '{print $1}'
}
function second {
  awk '{print $2}'
}
function third {
  awk '{print $3}'
}
function nth {
  awk -v nth=$1 '{print $nth}'
}

function tm {
  cmd1="tmux a || tmux -u new || bash"
  [[ $1 == "turbo" ]] && cmd2="" || cmd2="ssh -t $1"
  while true; do
    netstat -an | egrep "tcp.*2222.*LISTEN" >/dev/null
    if [[ $? = 0 ]]; then
      ssh -p 2222 -t localhost "${cmd2} ${cmd1}"
    elif [[ $(host $1 >/dev/null 2>&1; echo $?) = 0 ]]; then
      ssh -p 8103 -t $1 "${cmd1}"
    fi
    sleep 2
    sagent >/dev/null
  done
}

function gateway {
  netstat -rn | head -n 1 | awk '/default/ {print $2}'
}

test -d "${HOME}/.shell_logs" || mkdir "${HOME}/.shell_logs"
command_log () {
  logfile="${HOME}/.shell_logs/${HOSTNAME}"
  current_time=$(date '+%Y/%m/%d %H:%M:%S')
  log_line="${current_time} ${LOGNAME} PWD[${PWD}]"
  test "$BASH_COMMAND" = '' || \
    echo "${log_line} ${BASH_COMMAND}" >> ${logfile}
}
case $SHELL in
  *bash)
    trap command_log DEBUG
  ;;
  *zsh)
    preexec () {
      echo "$(date '+%Y/%m/%d %H:%M:%S') ${LOGNAME} PWD[${PWD}] $1" >> ${HOME}/.shell_logs/${HOSTNAME}
    }
    precmd () {
      z --add "$(pwd -P)"
    }
  ;;
esac

### SSH AGENT SHIT ############################################################
function sshagent_findsockets {
  find /tmp -uid $(id -u) -type s -name agent.\* 2>/dev/null
}

function sshagent_testsocket {
  if [ ! -x "$(which ssh-add)" ] ; then
    echo "ssh-add is not available; agent testing aborted"
    return 1
  fi

  if [ X"$1" != X ] ; then
    export SSH_AUTH_SOCK=$1
  fi

  if [ X"$SSH_AUTH_SOCK" = X ] ; then
    return 2
  fi

  if [ -S $SSH_AUTH_SOCK ] ; then
    ssh-add -l > /dev/null
    if [ $? = 2 ] ; then
      echo "Socket $SSH_AUTH_SOCK is dead!  Deleting!"
      rm -f $SSH_AUTH_SOCK
      return 4
    else
      echo "Found ssh-agent $SSH_AUTH_SOCK"
      return 0
    fi
  else
    echo "$SSH_AUTH_SOCK is not a socket!"
    return 3
  fi
}

function sshagent_init {
  # ssh agent sockets can be attached to a ssh daemon process or an
  # ssh-agent process.

  AGENTFOUND=0

  # Attempt to find and use the ssh-agent in the current environment
  if sshagent_testsocket ; then AGENTFOUND=1 ; fi

  # If there is no agent in the environment, search /tmp for
  # possible agents to reuse before starting a fresh ssh-agent
  # process.
  if [ $AGENTFOUND = 0 ] ; then
    for agentsocket in $(sshagent_findsockets) ; do
      if [ $AGENTFOUND != 0 ] ; then break ; fi
      if sshagent_testsocket $agentsocket ; then AGENTFOUND=1 ; fi
    done
  fi

  # If at this point we still haven't located an agent, it's time to
  # start a new one
  if [ $AGENTFOUND = 0 ] ; then
    eval `ssh-agent`
  fi

  # Clean up
  unset AGENTFOUND
  unset agentsocket

  # Finally, show what keys are currently in the agent
  ssh-add -l
}
